TODO:
- see https://github.com/agarun/agarun.github.io
- see https://github.com/zzossig/hugo-theme-zzo
- see https://github.com/LilydotEE/LilydotEE.github.io (HTML CSS y JS a huevo)
- see https://github.com/ritwickdey/ritwickdey.github.io
- see https://aipiano.github.io/
- see https://github.com/Sabir97/Sabir97.github.io/tree/main (HTML SASS y JS a huevo)
- see https://jaimeparada06.github.io/#sobre (HTML CSS y JS a huevo y todo con ficheros encapsulados en un solo repo)
- tutorial GIthub Pages simple: https://dannguyen.github.io/github-for-portfolios/lessons/deploy-github-pages/
- tutorial jeckyll: https://paulle.ca/jekyll-tutorials/deploy-jekyll-site-github-pages#find-a-jekyll-theme
- construir un tema propio con Next.js y hacer deploy con Vercel, como https://github.com/drkostas/drkostas.github.io
- usar Jeckyll y SASS para crear mi portfolio https://talk.jekyllrb.com/t/i-want-to-make-my-own-theme-with-jekylll/6766, https://github.com/LeNPaul/portfolio-jekyll-theme, https://github.com/ankur-gupta/laplacian
- hacer todos los extras que mencionan en see https://docs.github.com/es/pages (HTTP, añadir página 404 personalizada, Jekyll...)
- usar flask para la web (está más orientado a apps web sin BBDD) https://github.com/petersimeth/basic-flask-template, https://github.com/helloflask/flask-examples?tab=readme-ov-file
- usar Django más Python, Bootstrap... https://github.com/smahesh29/Django-WebApp, https://drksephy.github.io/2015/07/16/django/


# agarnung.github.io

Este profolio está basado en https://github.com/yousinix/portfolYOU/tree/master?tab=readme-ov-file

# Instrucciones de creación de porfolio co Jeckyl y bundler
# Instalar Jeckyl para testear la web:
	Seguir la sinstrucciónes de (https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/testing-your-github-pages-site-locally-with-jekyll) y (https://jekyllrb.com/docs/installation/ubuntu/):

	sudo apt-get install ruby-full build-essential zlib1g-dev
	
	Ejecutar:
	echo '# Install Ruby Gems to ~/gems' >> ~/.bashrc
	echo 'export GEM_HOME="$HOME/gems"' >> ~/.bashrc
	echo 'export PATH="$HOME/gems/bin:$PATH"' >> ~/.bashrc
	source ~/.bashrc
		
	gem install jekyll bundler # With this one check we have jecyl and bundler installed. May need root permisions
	
	Check isntallation jekyll --version
	
	INstala bundler: siguiendo https://www.geeksforgeeks.org/how-to-install-ruby-bundler-on-linux/
	
# Para lanzar jeckyl y testear la web:
	Seguri isntrucciones de (https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll/testing-your-github-pages-site-locally-with-jekyll)
	IR al dirwcotiro de la web, e.g. /opt/agarnung.github,io
	Crear un Gemfile con bundler: bundle init
	Add jeckyll in gemfile: Openg gemfile and add: gem 'jekyll' y gem 'jekyll-gist'
	Creaer en la raíz _config.yml:
		title: agarnung.github.io
		description: My personal portfolio
		baseurl: "" # Empty for local development
		url: ""     # Empty for local development       

		plugins:
		  - jekyll-gist
	Entrar en el archivo _includes/elements/github_edit_footer.html y dejarlo vacío. A posteriori, cuando el repo esté terminado y sea público y no lo testeemos ya en local, añadir lo que estaba antes, que era esto:
		<footer class="github-footer">
		    This page is <b>open source</b>. Noticed a typo? <br />
		    Or something unclear? {% github_edit_link "Improve it on GitHub" %}.
		</footer>
	Lanzar el comando bundle install 
	CHeck that the kecjyll gem is installed: bundle exec jekyll --version
	RUn your kecyll site localy, using bundle exec: bundle exec jekyll serve
